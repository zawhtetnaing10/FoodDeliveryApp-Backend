// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: orders.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createOrder = `-- name: CreateOrder :one
INSERT INTO orders(user_id, delivery_address_id, payment_method_id, total_cost, order_number, created_at, updated_at)
VALUES(
    $1,
    $2,
    $3,
    $4,
    $5,
    NOW() AT TIME ZONE 'UTC',
    NOW() AT TIME ZONE 'UTC'
)
RETURNING id, total_cost, order_number, user_id, delivery_address_id, payment_method_id, created_at, updated_at
`

type CreateOrderParams struct {
	UserID            pgtype.Int8
	DeliveryAddressID pgtype.Int8
	PaymentMethodID   pgtype.Int8
	TotalCost         pgtype.Numeric
	OrderNumber       string
}

func (q *Queries) CreateOrder(ctx context.Context, arg CreateOrderParams) (Order, error) {
	row := q.db.QueryRow(ctx, createOrder,
		arg.UserID,
		arg.DeliveryAddressID,
		arg.PaymentMethodID,
		arg.TotalCost,
		arg.OrderNumber,
	)
	var i Order
	err := row.Scan(
		&i.ID,
		&i.TotalCost,
		&i.OrderNumber,
		&i.UserID,
		&i.DeliveryAddressID,
		&i.PaymentMethodID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
